#!/bin/bash

BASEDIR=$(pwd)
if [[ -f "$BASEDIR/.malumatenv" ]]; then
	source $BASEDIR/.malumatenv
else 
	printf ".malumatenv file not found.\n";
	while true; do
		read -p "Would you like to create .malumatenv file?" yn
		case $yn in
			[Yy]* ) 
				printf "Enter local domain name. E.g http://example.test\n"
				read DOMAINLOCAL;
				printf "Enter production domain name. E.g https://example.com\n"
				read DOMAINPROD;
				printf "Enter database name.\n"
				read DBNAME;
				printf "Enter database username.\n"
				read DBUSER;
				printf "Enter database hostname.\n"
				read DBHOST;
				printf "Enter database password.\n"
				read DBPASS;
				cat <<< '#!/bin/bash

#====================ENV VARS======================#

DOMAINLOCAL="'$DOMAINLOCAL'"
DOMAINPROD="'$DOMAINPROD'"
DBNAME="'$DBNAME'"
DBUSER="'$DBUSER'"
DBHOST="'$DBHOST'"
DBPASS="'$DBPASS'"
MYSQL="$(which mysql)"
MYSQLDUMP="$(which mysqldump)"	
				' > $BASEDIR/.malumatenv;
				mkdir $BASEDIR/malumatdir;
				printf "\n.malumatenv file and database folder created successfully.\n\n"
				printf "You can start pull, push and rename your database...\n\n"
				break;;
			[Nn]* ) echo "Allright, bye..."; exit;;
			* ) echo "Please answer yes or no.";;
		esac
	done
	exit;
fi

#=====================CONFIG======================#

# COLORS
NC='\033[0m'
RED='\033[0;31m'
GREEN='\033[0;32m'
BROWN='\033[0;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
LIGHTBLUE='\033[0;94m'

# DATE
DATESTR=$(date "+%Y-%m-%d-%H-%M-%S")

# PATH
DBPATH=$BASEDIR"/malumatdir"
DB=$DBPATH"/"$DBNAME".sql.bak"

# SSH TUNNEL PROCESS ID
TUNNELPID=`ps -ef | grep ssh | grep 3307 | awk '{ print $2 }'`

#===================START========================#

if [[ $1 = "push" ]]; then
	printf "For MySQL root user ---> ";
	$MYSQL -u $DBUSER -p$DBPASS -h $DBHOST $DBNAME < $DB;
	echo "Database" $DBNAME "pushed...";
elif [[ $1 = "rename" ]]; then
		LOCALURL=$(sed 's/\//\\\//g' <<< $DOMAINLOCAL);
		PRODURL=$(sed 's/\//\\\//g' <<< $DOMAINPROD);
		if [[ $2 = "-l" ]]; then
			if [ "$(uname)" == "Darwin" ]; then
				LC_CTYPE=C sed -i '' "s/$PRODURL/$LOCALURL/g" $DB;
			else 
				sed -i "s/$PRODURL/$LOCALURL/g" $DB;
			fi
		elif [[ $2 = "-p" ]]; then
			if [ "$(uname)" == "Darwin" ]; then
				LC_CTYPE=C sed -i '' "s/$LOCALURL/$PRODURL/g" $DB;
			else 
				sed -i "s/$LOCALURL/$PRODURL/g" $DB;
			fi
		else
			printf "\nA correct flag needed. You can pass:\n\n";
			echo -e "${LIGHTBLUE}rename -l${NC} flag to rename from production domain name to local domain name.";
			echo -e "${LIGHTBLUE}rename -p${NC} flag to rename from local domain name to production domain name.";
			echo "";
		fi
elif [[ $1 = "pull" ]]; then
	$MYSQLDUMP -u $DBUSER -p$DBPASS -h $DBHOST --add-drop-table --databases $DBNAME > $DB;
	echo "Database" $DBNAME "pulled...";
elif [[ $1 = "save" ]]; then
	$MYSQLDUMP -u $DBUSER -p$DBPASS -h $DBHOST --add-drop-table --databases $DBNAME > $DBPATH"/"$DBNAME"-"$DATESTR".sql.bak";
	echo "Database" $DBNAME "copied and saved...";
elif [[ $1 = "-r" ]]; then
	if [[ $2 = "init" ]]; then
		if [[ -z "$TUNNELPID" ]]; then
			if [[ -z ${SSH_USER} ]]; then
				printf "SSH password will not be asked for security reasons.\nEnter SSH username.\n"
				read SSH_USER;
				cat <<< 'SSH_USER="'$SSH_USER'"' >> .malumatenv
			fi
			if [[ -z ${SSH_HOST} ]]; then
				printf "Enter SSH host\n"
				read SSH_HOST;
				cat <<< 'SSH_HOST="'$SSH_HOST'"' >> .malumatenv
			fi
			if [[ -z ${SSH_DBHOST} ]]; then
				printf "Enter MySQL hostname\n"
				read SSH_DBHOST;
				cat <<< 'SSH_DBHOST="'$SSH_DBHOST'"' >> .malumatenv
			fi
			if [[ -z ${SSH_DBUSER} ]]; then
				printf "Enter MySQL username\n"
				read SSH_DBUSER;
				cat <<< 'SSH_DBUSER="'$SSH_DBUSER'"' >> .malumatenv
			fi
			if [[ -z ${SSH_DBPASS} ]]; then
				printf "Enter MySQL password\n"
				read SSH_DBPASS;
				cat <<< 'SSH_DBPASS="'$SSH_DBPASS'"' >> .malumatenv
			fi
			printf ".malumatenv is ready for SSH tunnel on 3307 port.\nStarting tunnel on 3307 local port...\nAfter entering you password, you can run remote commands.\nTo kill the SSH tunnel, run: malumat -r exit\n";
			ssh -f -T $SSH_USER@$SSH_HOST -L 3307:$SSH_DBHOST:3306 -N 
		else
			printf "\nMalumat remote is already active.\nYou can use remote commands with malumat -r.\n\n";
		fi
	elif [[ $2 = "exit" ]]; then
		if [[ -z "$TUNNELPID" ]]; then
			printf "\nMalumat remote tunnel is not active.\nTo start it, run: malumat -r init\n\n";
		else
			kill -9 $TUNNELPID;
			printf "\nMalumat remote tunnel is closed.\nTo restart it, run: malumat -r init\n\n";
		fi
	elif [[ $2 = "pull" ]]; then
		printf "\nWarning! Don't forget that you're executing remote pull command.\n";
		read -p "Do yo want to continue? " yn
		$MYSQLDUMP --host=127.0.0.1 --port=3307 -u $SSH_DBUSER -p$SSH_DBPASS --add-drop-table --databases $DBNAME > $DB;
		echo "Database" $DBNAME "pulled...";
	elif [[ $2 = "push" ]]; then
		printf "\nWarning! Don't forget that you're executing remote push command.\n";
		read -p "Do yo want to continue? " yn
		$MYSQL --host=127.0.0.1 --port=3307 -u $SSH_DBUSER -p$SSH_DBPASS $DBNAME < $DB;
		echo "Database" $DBNAME "pushed...";
	elif [[ $2 = "save" ]]; then
		$MYSQLDUMP --host=127.0.0.1 --port=3307 -u $SSH_DBUSER -p$SSH_DBPASS --add-drop-table --databases $DBNAME > $DBPATH"/"$DBNAME"-"$DATESTR".sql.bak";
		echo "Database" $DBNAME "copied and saved...";
	fi
elif [[ $1 = "env" ]]; then
	mkdir $DBPATH;
	vi .malumatenv
elif [[ $1 = "show" ]]; then
	ls $DBPATH;
elif [[ $1 = "flush" ]]; then
	while true; do
		read -p "Are you sure to flush your $DBNAME database saves? " yn
		case $yn in
			[Yy]* ) rm $DBPATH"/"$DBNAME"-"*; echo "Saves flushed..."; break;;
			[Nn]* ) echo "Allright"; exit;;
			* ) echo "Please answer yes or no.";;
		esac
	done
elif [[ $1 = "help" ]]; then
	echo "";
	echo -e "RUN ${CYAN}malumat env${NC} to set database, user credentials and MySQL executables.";
	echo -e "RUN ${BROWN}malumat push${NC} to push the database from your local ./malumatdir folder to your MySQL installation.";
	echo -e "RUN ${BLUE}malumat pull${NC} to pull the database content from your MySQL installation.";
	echo -e "RUN ${GREEN}malumat save${NC} to save a copy of the database from your MySQL installation.";
	echo -e "RUN ${CYAN}malumat -r init${NC} to create an SSH tunnel with your remote MySQL server.";
	echo -e "RUN ${BROWN}malumat -r push${NC} to push database from your local ./malumatdir folder to your remote MySQL server.";
	echo -e "RUN ${BLUE}malumat -r pull${NC} to pull database from your remote MySQL server.";
	echo -e "RUN ${GREEN}malumat -r save${NC} to save a copy of the database from your remote MySQL server.";
	echo -e "RUN ${CYAN}malumat -r exit${NC} to close SSH tunnel with your remote MySQL database.";
	echo -e "RUN ${LIGHTBLUE}malumat rename -l${NC} to rename database from production to local domain name.";
	echo -e "RUN ${LIGHTBLUE}malumat rename -p${NC} to rename database from local to production domain name.";
	echo -e "RUN ${PURPLE}malumat show${NC} to see what you saved in "$DBPATH;
	echo -e "RUN ${RED}malumat flush${NC} to remove all temporary saves in "$DBPATH;
	echo "";
else
	printf "\n'$1' is a wrong command...\nRun: 'malumat help' for available commands.\n\n"
fi
